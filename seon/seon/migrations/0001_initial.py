# Generated by Django 2.2.28 on 2024-12-26 15:35

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tercero',
            fields=[
                ('codter', models.AutoField(primary_key=True, serialize=False)),
                ('tipper', models.SmallIntegerField(choices=[(0, 'Natural'), (1, 'Jurídica')])),
                ('nomter', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre/Razón social')),
                ('papter', models.CharField(blank=True, max_length=50, null=True, verbose_name='Primer apellido')),
                ('sapter', models.CharField(blank=True, max_length=50, null=True, verbose_name='Segundo apellido')),
                ('nomcter', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre comercial')),
                ('tipnit', models.SmallIntegerField(choices=[(0, 'Cédula de Ciudadanía'), (1, 'Pasaporte'), (3, 'Tarjeta de Identidad'), (4, 'Registro Civil')])),
                ('nitter', models.CharField(help_text='(Ingrese el NIT o la cédula sin puntos ni guiones).', max_length=20, unique=True, verbose_name='NIT/Cédula')),
                ('paister', models.CharField(blank=True, max_length=50, null=True, verbose_name='País de residencia')),
                ('ciuter', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ciudad')),
                ('dirter', models.CharField(blank=True, max_length=150, null=True, verbose_name='Dirección')),
                ('direle', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Correo electrónico')),
                ('rutater', models.CharField(blank=True, max_length=20, null=True, verbose_name='Ruta')),
                ('telter', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="El número de teléfono debe tener entre 9 y 15 dígitos y puede comenzar con '+'", regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono fijo')),
                ('celter', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="El número de teléfono debe tener entre 9 y 15 dígitos y puede comenzar con '+'", regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono móvil')),
                ('tipter', models.SmallIntegerField(choices=[(0, 'Cliente'), (1, 'Proveedor'), (2, 'Empleado'), (3, 'Inactivos'), (4, 'Otros')])),
                ('contacto', models.CharField(blank=True, max_length=100, null=True, verbose_name='Persona de contacto')),
                ('cgo_contac', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cargo del contacto')),
                ('excen_iva', models.CharField(blank=True, choices=[('V', 'Verdadero'), ('F', 'Falso')], max_length=1, null=True, verbose_name='Exento de IVA')),
                ('lispre', models.SmallIntegerField(blank=True, null=True, verbose_name='Lista de precios')),
                ('cuptot', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cupo total')),
                ('saldocup', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Saldo del cupo')),
                ('descuento', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Descuento (%)')),
                ('zonater', models.CharField(blank=True, max_length=50, null=True, verbose_name='Zona')),
                ('fecha_ini', models.DateField(blank=True, null=True, verbose_name='Fecha de inicio')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de fin')),
                ('plazofac', models.SmallIntegerField(blank=True, null=True, verbose_name='Plazo de facturación')),
                ('vendedor', models.SmallIntegerField(blank=True, null=True, verbose_name='Código del vendedor')),
                ('cta_banco', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cuenta bancaria')),
                ('cod_banco', models.CharField(blank=True, max_length=20, null=True, verbose_name='Código del banco')),
                ('tipo_cta', models.SmallIntegerField(blank=True, choices=[(0, 'Corriente'), (1, 'Ahorros')], null=True, verbose_name='Tipo de cuenta bancaria')),
                ('categoria', models.CharField(blank=True, max_length=50, null=True, verbose_name='Categoría')),
                ('retfuente', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Retención fuente')),
                ('retica', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Retención ICA')),
                ('retiva', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Retención IVA')),
                ('base_ret_fte', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Base Retención Fuente')),
                ('base_ret_ica', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Base Retención ICA')),
                ('base_ret_iva', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Base Retención IVA')),
                ('lista_base', models.SmallIntegerField(blank=True, null=True, verbose_name='Lista base')),
                ('observa', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('ter_origen', models.SmallIntegerField(blank=True, null=True, verbose_name='Origen del cliente')),
                ('localidad', models.CharField(blank=True, max_length=50, null=True, verbose_name='Localidad')),
                ('barrio', models.CharField(blank=True, max_length=50, null=True, verbose_name='Barrio')),
                ('descuento_2', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Descuento adicional (%)')),
                ('lisvar', models.SmallIntegerField(blank=True, null=True, verbose_name='Lista variable')),
                ('codalter', models.IntegerField(blank=True, null=True, verbose_name='Código alternativo')),
                ('des_origen', models.CharField(blank=True, max_length=50, null=True, verbose_name='Descripción del origen')),
            ],
            options={
                'verbose_name': 'Tercero',
                'verbose_name_plural': 'Terceros',
                'db_table': 'TERCEROS',
                'ordering': ['nomter'],
            },
        ),
    ]
